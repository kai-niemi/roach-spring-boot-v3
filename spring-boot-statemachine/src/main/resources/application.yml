########################
# Spring boot properties
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
########################
spring:
  profiles:
    # Available profiles:
    # One of:
    #   crdb-cloud   - Use CRDB JDBC driver connection presets for CC
    #   crdb-dev     - Use CRDB JDBC driver connection presets for dev env
    #   crdb-local   - Use CRDB JDBC driver connection presets for local env
    # One of:
    #   psql-cloud   - Use pg-JDBC driver connection presets for CC
    #   psql-dev     - Use pg-JDBC driver connection presets for dev env
    #   psql-local   - Use pg-JDBC driver connection presets for local env
    # Any of:
    #   verbose      - Enable verbose SQL logging via TTDDYY
    #   retry-client - Enable AOP-driven client-side retry logic
#    active: crdb-dev,verbose
    active: psql-dev,verbose
#    active: psql-dev,verbose,retry-client
  output:
    ansi:
      enabled: ALWAYS
  flyway:
    enabled: true
    clean-on-validation-error: true
    baseline-on-migrate: true
    clean-disabled: false
  jpa:
    open-in-view: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.CockroachDialect
        connection:
          provider_disables_autocommit: false
        jdbc:
          lob:
            non_contextual_creation: true
          batch_size: 128
          fetch_size: 128
          batch_versioned_data: true
        order_inserts: true
        order_updates: true
        hql:
          bulk_id_strategy: org.hibernate.hql.spi.id.inline.CteValuesListBulkIdStrategy
        cache:
          use_minimal_puts: true
          use_second_level_cache: false
  datasource:
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 50
      minimum-idle: 25
#############################
logging:
  pattern:
    console: "%clr(%d{${LOG_DATEFORMAT_PATTERN:HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:%5p}) %clr([%logger{39}]){cyan} %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}"
